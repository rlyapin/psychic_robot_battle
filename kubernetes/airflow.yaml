apiVersion: v1
kind: ServiceAccount
metadata:
  name: airflow-serviceaccount
  namespace: default

---

apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: pod-manager-role
rules:
  - apiGroups: [""]
    resources: ["pods"]
    verbs: ["get", "list", "patch", "watch", "create", "delete"]

---

apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: airflow-executor-authorization
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: pod-manager-role
subjects:
  - kind: ServiceAccount
    name: airflow-serviceaccount
    namespace: default

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: airflow
spec:
  replicas: 1
  selector:
    matchLabels:
      name: airflow
  template:
    metadata:
      labels:
        name: airflow
    spec:
      automountServiceAccountToken: true
      serviceAccountName: airflow-serviceaccount
      containers:
      - name: airflow-webserver
        image: airflow-image
        command: ["airflow", "webserver", "-p", "8000"]
        envFrom:
        - secretRef:
            name: timescaledb-secrets
        env:
          - name: AIRFLOW__DATABASE__SQL_ALCHEMY_CONN
            value: "postgresql://$(POSTGRES_USER):$(POSTGRES_PASSWORD)@$(POSTGRES_HOSTNAME):$(POSTGRES_PORT)/$(POSTGRES_AIRFLOW_DB)"
          - name: AIRFLOW__WEBSERVER__EXPOSE_CONFIG
            value: "True"

      - name: airflow-scheduler
        image: airflow-image
        command: ["airflow", "scheduler"]
        envFrom:
        - secretRef:
            name: timescaledb-secrets
        env:
        - name: AIRFLOW__DATABASE__SQL_ALCHEMY_CONN
          value: "postgresql://$(POSTGRES_USER):$(POSTGRES_PASSWORD)@$(POSTGRES_HOSTNAME):$(POSTGRES_PORT)/$(POSTGRES_AIRFLOW_DB)"
        - name: AIRFLOW__CORE__EXECUTOR
          value: KubernetesExecutor
        - name: AIRFLOW__KUBERNETES__POD_TEMPLATE_FILE
          value: /opt/airflow/pod_template_file.yaml
        - name: AIRFLOW__KUBERNETES__IN_CLUSTER
          value: 'true'
        - name: AIRFLOW__KUBERNETES__DAGS_IN_IMAGE
          value: 'true'
        - name: AIRFLOW__KUBERNETES__RUN_AS_USER
          value: '50000'

      initContainers:
      - name: airflow-init
        image: airflow-image
        envFrom:
        - secretRef:
            name: timescaledb-secrets
        - secretRef:
            name: airflow-webserver-secrets           
        env:
        - name: AIRFLOW__DATABASE__SQL_ALCHEMY_CONN
          value: "postgresql://$(POSTGRES_USER):$(POSTGRES_PASSWORD)@$(POSTGRES_HOSTNAME):$(POSTGRES_PORT)/$(POSTGRES_AIRFLOW_DB)"
        command: ["/bin/sh"]
        args:
          - -c
          - >-
              airflow db upgrade &&
              airflow users create
              -u $(WEBSERVER_USER)
              -p $(WEBSERVER_PASSWORD)
              -r $(WEBSERVER_ROLE)
              -e $(WEBSERVER_EMAIL)
              -f $(WEBSERVER_FIRST_NAME)
              -l $(WEBSERVER_LAST_NAME)
